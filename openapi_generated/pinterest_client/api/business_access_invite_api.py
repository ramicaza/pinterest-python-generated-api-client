"""
    Pinterest REST API

    Pinterest's REST API  # noqa: E501

    The version of the OpenAPI document: 5.14.0
    Contact: pinterest-api@pinterest.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_generated.pinterest_client.api_client import ApiClient, Endpoint as _Endpoint
from openapi_generated.pinterest_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from openapi_generated.pinterest_client.model.auth_respond_invites_body import AuthRespondInvitesBody
from openapi_generated.pinterest_client.model.cancel_invites_body import CancelInvitesBody
from openapi_generated.pinterest_client.model.create_asset_access_request_body import CreateAssetAccessRequestBody
from openapi_generated.pinterest_client.model.create_asset_access_request_response import CreateAssetAccessRequestResponse
from openapi_generated.pinterest_client.model.create_asset_invites_request import CreateAssetInvitesRequest
from openapi_generated.pinterest_client.model.create_invites_results_response_array import CreateInvitesResultsResponseArray
from openapi_generated.pinterest_client.model.create_membership_or_partnership_invites_body import CreateMembershipOrPartnershipInvitesBody
from openapi_generated.pinterest_client.model.delete_invites_results_response_array import DeleteInvitesResultsResponseArray
from openapi_generated.pinterest_client.model.error import Error
from openapi_generated.pinterest_client.model.invite_response import InviteResponse
from openapi_generated.pinterest_client.model.invite_type import InviteType
from openapi_generated.pinterest_client.model.paginated import Paginated
from openapi_generated.pinterest_client.model.respond_to_invites_response_array import RespondToInvitesResponseArray
from openapi_generated.pinterest_client.model.update_invites_results_response_array import UpdateInvitesResultsResponseArray


class BusinessAccessInviteApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.asset_access_requests_create_endpoint = _Endpoint(
            settings={
                'response_type': (CreateAssetAccessRequestResponse,),
                'auth': [
                    'pinterest_oauth2'
                ],
                'endpoint_path': '/businesses/{business_id}/requests/assets/access',
                'operation_id': 'asset_access_requests_create',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'business_id',
                    'create_asset_access_request_body',
                ],
                'required': [
                    'business_id',
                    'create_asset_access_request_body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'business_id',
                ]
            },
            root_map={
                'validations': {
                    ('business_id',): {
                        'max_length': 20,
                        'min_length': 1,
                        'regex': {
                            'pattern': r'^\d+$',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'business_id':
                        (str,),
                    'create_asset_access_request_body':
                        (CreateAssetAccessRequestBody,),
                },
                'attribute_map': {
                    'business_id': 'business_id',
                },
                'location_map': {
                    'business_id': 'path',
                    'create_asset_access_request_body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.cancel_invites_or_requests_endpoint = _Endpoint(
            settings={
                'response_type': (DeleteInvitesResultsResponseArray,),
                'auth': [
                    'pinterest_oauth2'
                ],
                'endpoint_path': '/businesses/{business_id}/invites',
                'operation_id': 'cancel_invites_or_requests',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'business_id',
                    'cancel_invites_body',
                ],
                'required': [
                    'business_id',
                    'cancel_invites_body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'business_id',
                ]
            },
            root_map={
                'validations': {
                    ('business_id',): {
                        'max_length': 20,
                        'min_length': 1,
                        'regex': {
                            'pattern': r'^\d+$',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'business_id':
                        (str,),
                    'cancel_invites_body':
                        (CancelInvitesBody,),
                },
                'attribute_map': {
                    'business_id': 'business_id',
                },
                'location_map': {
                    'business_id': 'path',
                    'cancel_invites_body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.create_asset_invites_endpoint = _Endpoint(
            settings={
                'response_type': (UpdateInvitesResultsResponseArray,),
                'auth': [
                    'pinterest_oauth2'
                ],
                'endpoint_path': '/businesses/{business_id}/invites/assets/access',
                'operation_id': 'create_asset_invites',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'business_id',
                    'create_asset_invites_request',
                ],
                'required': [
                    'business_id',
                    'create_asset_invites_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'business_id',
                ]
            },
            root_map={
                'validations': {
                    ('business_id',): {
                        'max_length': 20,
                        'min_length': 1,
                        'regex': {
                            'pattern': r'^\d+$',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'business_id':
                        (str,),
                    'create_asset_invites_request':
                        (CreateAssetInvitesRequest,),
                },
                'attribute_map': {
                    'business_id': 'business_id',
                },
                'location_map': {
                    'business_id': 'path',
                    'create_asset_invites_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.create_membership_or_partnership_invites_endpoint = _Endpoint(
            settings={
                'response_type': (CreateInvitesResultsResponseArray,),
                'auth': [
                    'pinterest_oauth2'
                ],
                'endpoint_path': '/businesses/{business_id}/invites',
                'operation_id': 'create_membership_or_partnership_invites',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'business_id',
                    'create_membership_or_partnership_invites_body',
                ],
                'required': [
                    'business_id',
                    'create_membership_or_partnership_invites_body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'business_id',
                ]
            },
            root_map={
                'validations': {
                    ('business_id',): {
                        'max_length': 20,
                        'min_length': 1,
                        'regex': {
                            'pattern': r'^\d+$',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'business_id':
                        (str,),
                    'create_membership_or_partnership_invites_body':
                        (CreateMembershipOrPartnershipInvitesBody,),
                },
                'attribute_map': {
                    'business_id': 'business_id',
                },
                'location_map': {
                    'business_id': 'path',
                    'create_membership_or_partnership_invites_body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.get_invites_endpoint = _Endpoint(
            settings={
                'response_type': (bool, date, datetime, dict, float, int, list, str, none_type,),
                'auth': [
                    'pinterest_oauth2'
                ],
                'endpoint_path': '/businesses/{business_id}/invites',
                'operation_id': 'get_invites',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'business_id',
                    'is_member',
                    'invite_status',
                    'invite_type',
                    'bookmark',
                    'page_size',
                ],
                'required': [
                    'business_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'invite_status',
                ],
                'validation': [
                    'business_id',
                    'invite_status',
                    'page_size',
                ]
            },
            root_map={
                'validations': {
                    ('business_id',): {
                        'max_length': 20,
                        'min_length': 1,
                        'regex': {
                            'pattern': r'^\d+$',  # noqa: E501
                        },
                    },
                    ('invite_status',): {

                        'min_items': 1,
                    },
                    ('page_size',): {

                        'inclusive_maximum': 250,
                        'inclusive_minimum': 1,
                    },
                },
                'allowed_values': {
                    ('invite_status',): {

                        "PENDING": "PENDING",
                        "EXPIRED": "EXPIRED"
                    },
                },
                'openapi_types': {
                    'business_id':
                        (str,),
                    'is_member':
                        (bool,),
                    'invite_status':
                        ([str],),
                    'invite_type':
                        (InviteType,),
                    'bookmark':
                        (str,),
                    'page_size':
                        (int,),
                },
                'attribute_map': {
                    'business_id': 'business_id',
                    'is_member': 'is_member',
                    'invite_status': 'invite_status',
                    'invite_type': 'invite_type',
                    'bookmark': 'bookmark',
                    'page_size': 'page_size',
                },
                'location_map': {
                    'business_id': 'path',
                    'is_member': 'query',
                    'invite_status': 'query',
                    'invite_type': 'query',
                    'bookmark': 'query',
                    'page_size': 'query',
                },
                'collection_format_map': {
                    'invite_status': 'multi',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.respond_business_access_invites_endpoint = _Endpoint(
            settings={
                'response_type': (RespondToInvitesResponseArray,),
                'auth': [
                    'pinterest_oauth2'
                ],
                'endpoint_path': '/businesses/invites',
                'operation_id': 'respond_business_access_invites',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'auth_respond_invites_body',
                ],
                'required': [
                    'auth_respond_invites_body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'auth_respond_invites_body':
                        (AuthRespondInvitesBody,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'auth_respond_invites_body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def asset_access_requests_create(
        self,
        business_id,
        create_asset_access_request_body,
        **kwargs
    ):
        """Create a request to access an existing partner's assets.  # noqa: E501

        Create a request to access an existing partner's assets with the specified permissions. The request will be sent to the partner for approval. The assets that can be requested are ad accounts and profiles.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.asset_access_requests_create(business_id, create_asset_access_request_body, async_req=True)
        >>> result = thread.get()

        Args:
            business_id (str): Unique identifier of the requesting business.
            create_asset_access_request_body (CreateAssetAccessRequestBody):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CreateAssetAccessRequestResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['business_id'] = \
            business_id
        kwargs['create_asset_access_request_body'] = \
            create_asset_access_request_body
        return self.asset_access_requests_create_endpoint.call_with_http_info(**kwargs)

    def cancel_invites_or_requests(
        self,
        business_id,
        cancel_invites_body,
        **kwargs
    ):
        """Cancel invites/requests  # noqa: E501

        Cancel membership/partnership invites and/or requests.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.cancel_invites_or_requests(business_id, cancel_invites_body, async_req=True)
        >>> result = thread.get()

        Args:
            business_id (str): Business id
            cancel_invites_body (CancelInvitesBody): A list with invite ids

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            DeleteInvitesResultsResponseArray
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['business_id'] = \
            business_id
        kwargs['cancel_invites_body'] = \
            cancel_invites_body
        return self.cancel_invites_or_requests_endpoint.call_with_http_info(**kwargs)

    def create_asset_invites(
        self,
        business_id,
        create_asset_invites_request,
        **kwargs
    ):
        """Update invite/request with an asset permission  # noqa: E501

        Assign asset permissions information to an existing invite/request. Can be used to: - Request access to a partner's asset. Note: This is only for when no existing partnership exists. If an existing   partnership exists, use \"Create a request to access an existing partner's assets\" to request access to your   partner's assets.     - invite_type=\"PARTNER_REQUEST\" - Invite a partner to access your business assets. Note: This is only for when there is no existing partnership.   If there is an existing partnership, use \"Assign/Update partner asset permissions\" to assign a partner access to   new assets.     - invite_type=\"PARTNER_INVITE\" - Invite a member to access your business assets. Note: This is only for when there is no existing membership.   If there is an existing membership, use \"Assign/Update member asset permissions\" to assign a member access to new   assets.     - invite_type=\"MEMBER_INVITE\"  To learn more about permission levels, visit https://help.pinterest.com/en/business/article/business-manager-overview.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.create_asset_invites(business_id, create_asset_invites_request, async_req=True)
        >>> result = thread.get()

        Args:
            business_id (str): Unique identifier of the requesting business.
            create_asset_invites_request (CreateAssetInvitesRequest): A list of invites/requests together with the asset permissions to be assigned to the invite/request. 

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            UpdateInvitesResultsResponseArray
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['business_id'] = \
            business_id
        kwargs['create_asset_invites_request'] = \
            create_asset_invites_request
        return self.create_asset_invites_endpoint.call_with_http_info(**kwargs)

    def create_membership_or_partnership_invites(
        self,
        business_id,
        create_membership_or_partnership_invites_body,
        **kwargs
    ):
        """Create invites or requests  # noqa: E501

        Create batch invites or requests. Can create batch invites or requests as described below. - Invite members to join the business. This would required specifying the following:     - invite_type=\"MEMBER_INVITE\"     - business_role=\"EMPLOYEE\" OR business_role=\"BIZ_ADMIN\" (To learn more about business roles, visit     https://help.pinterest.com/en/business/article/profile-permissions-in-business-access.)     - members - Invite partners to access your business assets. This would require specifying the following:     - invite_type=\"PARTNER_INVITE\"     - business_role=\"PARTNER\"     - partners - Request to be a partner so you can access their assets. This would require specifying the following:     - invite_type=\"PARTNER_REQUEST\"     - business_role=\"PARTNER\"     - partners  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.create_membership_or_partnership_invites(business_id, create_membership_or_partnership_invites_body, async_req=True)
        >>> result = thread.get()

        Args:
            business_id (str): Business id
            create_membership_or_partnership_invites_body (CreateMembershipOrPartnershipInvitesBody): An object with the properties: invite_type, partners, members, business_role

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CreateInvitesResultsResponseArray
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['business_id'] = \
            business_id
        kwargs['create_membership_or_partnership_invites_body'] = \
            create_membership_or_partnership_invites_body
        return self.create_membership_or_partnership_invites_endpoint.call_with_http_info(**kwargs)

    def get_invites(
        self,
        business_id,
        **kwargs
    ):
        """Get invites/requests  # noqa: E501

        Get the membership/partnership invites and/or requests for the authorized user.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_invites(business_id, async_req=True)
        >>> result = thread.get()

        Args:
            business_id (str): Unique identifier of the requesting business.

        Keyword Args:
            is_member (bool): A boolean field to indicate whether the invite is to create a partnership or a membership.. [optional] if omitted the server will use the default value of True
            invite_status ([str]): A list of invite statuses to filter invites by. Only invites whose status is in the provided statuses will be returned.. [optional]
            invite_type (InviteType): Invite type to filter invites by. Only invites of the specified type will be returned.. [optional]
            bookmark (str): Cursor used to fetch the next page of items. [optional]
            page_size (int): Maximum number of items to include in a single page of the response. See documentation on <a href='/docs/reference/pagination/'>Pagination</a> for more information.. [optional] if omitted the server will use the default value of 25
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            bool, date, datetime, dict, float, int, list, str, none_type
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['business_id'] = \
            business_id
        return self.get_invites_endpoint.call_with_http_info(**kwargs)

    def respond_business_access_invites(
        self,
        auth_respond_invites_body,
        **kwargs
    ):
        """Accept or decline an invite/request  # noqa: E501

        Accept or decline invites or requests.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.respond_business_access_invites(auth_respond_invites_body, async_req=True)
        >>> result = thread.get()

        Args:
            auth_respond_invites_body (AuthRespondInvitesBody):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            RespondToInvitesResponseArray
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['auth_respond_invites_body'] = \
            auth_respond_invites_body
        return self.respond_business_access_invites_endpoint.call_with_http_info(**kwargs)

